---
import MainLayout from "@/layouts/MainLayout.astro";
import {getProductById} from "@/actions";
import ProductSlideShow from "@/components/products/ProductSlideShow.astro";
const { slug } = Astro.params;

const {data,error} = await Astro.callAction(getProductById, slug as string);

if (error) {
    return Astro.redirect('/404');
}

const { product, images} = data;

//   image={image}

---

<MainLayout
  title={product.title}
  description={product.description}

>
  <h1 class="pt-10 text-4xl bg-gradient-to-tr from-green-400 to-green-900 bg-clip-text text-transparent w-auto">{product.title}</h1>

  <div class="grid grid-cols-1 md:grid-cols-3 w-full gap-4">
    <ProductSlideShow images={images.map(img=>img.image)} />

    <section>
      <h2 class="text-2xl font-bold">{product.title}</h2>
      <h2 class="font-bold">${product.price}</h2>

      <h3 class="mt-5">Tallas</h3>
      <ul class="flex gap-3">
        {
          product.sizes
            .split(',')
            .map((size) => <li data-size={size}>{size}</li>)
        }
      </ul>

      <h3 class="mt-5">Cantidad</h3>
      <div>
        <button class="btn-quantity">-</button>
        <input type="number" min="1" value="1" />
        <button class="btn-quantity">+</button>
      </div>

      <button class="mt-5 bg-blue-500 text-white p-3 w-full disabled:bg-gray-500"
        >Añadir al carrito</button
      >

      <h3 class="mt-10">Descripción</h3>
      <p>{product.description}</p>
    </section>
  </div>

  <input type="hidden" id="product-id" value={product.id} />
</MainLayout>


<script>
  
import { itemsIncart } from "@/store";
import { CartCoookiesClient } from "@/utils/cart-cookies";
import {navigate} from "astro:transitions/client";

document.addEventListener('astro:page-load', () => {  

  const sizesElemnts = document.querySelectorAll('li');

  sizesElemnts.forEach((element) => {
    
    element.addEventListener('click', (e) => {
      sizesElemnts.forEach((elem) => {
        elem.classList.remove('selected-size');
      });
      element.classList.add('selected-size');
    });

  });
  const quantityInput = document.querySelector('input') as HTMLInputElement;
    const productInput = document.querySelector('#product-id') as HTMLInputElement;
    let quantity = 1;

    const [decrementButton, incrementButton, addToCartButton] = document.querySelectorAll('button');

    if (!quantityInput || !incrementButton) return;

    incrementButton.addEventListener('click', () => {
      quantity = Math.min(quantity + 1, 5);//Validacion para que no se pase de 5
      quantityInput.value = quantity.toString();
    });

    decrementButton.addEventListener('click', () => {
      quantity = Math.max(quantity - 1, 1);
      quantityInput.value = quantity.toString();
    });

    addToCartButton.addEventListener('click', async () => {

      const size = document.querySelector('.selected-size')?.textContent;

      if (!size) {
       return alert('Seleccione una talla');
        
      }

     addToCartButton.disabled = true;

      const cart = CartCoookiesClient.addItem({
         id: productInput.value,
         size,
         quantity
       
      });

      
      itemsIncart.set(cart.length);

      //TODO: Cambiar cuando se agreguen los viewTransition
      // window.location.href = '/cart';
       await navigate('/cart');

    });

});

  
   
</script>


<style>
  h3 {
    @apply font-bold;
  }

  li {
    @apply hover:underline cursor-pointer;
  }

  .selected-size {
    @apply text-blue-500 underline font-bold transition-all;
  }

  .btn-quantity {
    @apply w-10 text-center p-2 border border-gray-300 hover:bg-gray-100 cursor-pointer;
  }

  input {
    @apply w-16 text-center p-2 border border-gray-300;
  }

  input[type='number']::-webkit-outer-spin-button,
  input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type='number'] {
    -moz-appearance: textfield; /* Para Firefox */
  }
</style>